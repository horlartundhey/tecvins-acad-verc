{
  "openapi": "3.0.0",
  "info": {
    "title": "Tecvin Academy API",
    "version": "1.0.0",
    "description": "API documentation for Tecvin Academy"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "format": "password" },
                  "role": { 
                    "type": "string",
                    "enum": ["admin", "editor"]
                  }
                },
                "required": ["name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad request - Invalid user data or email already exists"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { 
                    "type": "string",
                    "format": "email"
                  },
                  "password": { 
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": { "type": "string" },
                    "name": { "type": "string" },
                    "email": { "type": "string" },
                    "role": { "type": "string" },
                    "token": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/auth/profile": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get user profile",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": { "type": "string" },
                    "name": { "type": "string" },
                    "email": { "type": "string" },
                    "role": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/blogs": {
      "get": {
        "tags": ["Blogs"],
        "summary": "Get all published blogs",
        "responses": {
          "200": {
            "description": "List of blogs retrieved successfully"
          }
        }
      },
      "post": {
        "tags": ["Blogs"],
        "summary": "Create new blog post",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "content": { "type": "string" },
                  "tags": { 
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "featuredImage": { "type": "string" }
                },
                "required": ["title", "content"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Blog created successfully"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/blogs/post/{slug}": {
      "get": {
        "tags": ["Blogs"],
        "summary": "Get blog by slug",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Blog post retrieved successfully"
          },
          "404": {
            "description": "Blog not found"
          }
        }
      }
    },
    "/api/blogs/{id}": {
      "put": {
        "tags": ["Blogs"],
        "summary": "Update blog",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Blog updated successfully"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      },
      "delete": {
        "tags": ["Blogs"],
        "summary": "Delete blog",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Blog deleted successfully"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/blogs/drafts": {
      "get": {
        "tags": ["Blogs"],
        "summary": "Get draft blogs",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Draft blogs retrieved successfully"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/students/applications": {
      "get": {
        "tags": ["Students"],
        "summary": "Get all student applications",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": ["pending", "approved", "rejected"]
            }
          },
          {
            "in": "query",
            "name": "course",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Applications retrieved successfully"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/students/applications/{id}": {
      "get": {
        "tags": ["Students"],
        "summary": "Get application by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Application retrieved successfully"
          },
          "404": {
            "description": "Application not found"
          }
        }
      },
      "put": {
        "tags": ["Students"],
        "summary": "Update application status",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "approved", "rejected"]
                  }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Application status updated successfully"
          },
          "404": {
            "description": "Application not found"
          }
        }
      }
    },
    "/api/trainers/apply": {
      "post": {
        "tags": ["Trainers"],
        "summary": "Submit trainer application",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "phoneNumber": { "type": "string" },
                  "expertise": { 
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "yearsOfExperience": { "type": "number" },
                  "resume": { "type": "string", "format": "binary" },
                  "portfolio": { "type": "string" },
                  "linkedIn": { "type": "string" },
                  "preferredCourses": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "availability": { "type": "string" }
                },
                "required": [
                  "fullName",
                  "email",
                  "phoneNumber",
                  "expertise",
                  "yearsOfExperience",
                  "resume",
                  "preferredCourses",
                  "availability"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Application submitted successfully"
          }
        }
      }
    },
    "/api/trainers/applications": {
      "get": {
        "tags": ["Trainers"],
        "summary": "Get all trainer applications",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Applications retrieved successfully"
          }
        }
      }
    },
    "/api/contact": {
      "post": {
        "tags": ["Contact"],
        "summary": "Submit contact form",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "subject": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["name", "email", "subject", "message"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message sent successfully"
          }
        }
      },
      "get": {
        "tags": ["Contact"],
        "summary": "Get all contact submissions",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Contact submissions retrieved successfully"
          }
        }
      }
    },
    "/api/partners": {
      "post": {
        "tags": ["Partners"],
        "summary": "Submit partnership application",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "organization": { "type": "string" },
                  "role": { "type": "string" },
                  "partnershipType": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["name", "email", "organization", "partnershipType"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Partnership application submitted successfully"
          }
        }
      },
      "get": {
        "tags": ["Partners"],
        "summary": "Get all partnership applications",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Partnership applications retrieved successfully"
          }
        }
      }
    },
    "/api/newsletter/subscribe": {
      "post": {
        "tags": ["Newsletter"],
        "summary": "Subscribe to newsletter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully subscribed to newsletter"
          },
          "400": {
            "description": "Email already subscribed"
          }
        }
      }
    },
    "/api/newsletter/unsubscribe": {
      "post": {
        "tags": ["Newsletter"],
        "summary": "Unsubscribe from newsletter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully unsubscribed from newsletter"
          },
          "404": {
            "description": "Email not found in subscription list"
          }
        }
      }
    }
  },
  "x-postman-collection": {
    "info": {
      "name": "Tecvin Academy API",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "auth": {
      "type": "bearer",
      "bearer": [{
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }]
    },
    "event": [{
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Only run this script if the request requires authentication and we don't have a valid token",
          "if (pm.request.headers.has('Authorization') && (!pm.environment.get('accessToken') || pm.environment.get('tokenExpiry') < new Date().getTime())) {",
          "    // Login request to get new token",
          "    const loginRequest = {",
          "        url: pm.environment.get('baseUrl') + '/api/auth/login',",
          "        method: 'POST',",
          "        header: {",
          "            'Content-Type': 'application/json'",
          "        },",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                email: pm.environment.get('userEmail'),",
          "                password: pm.environment.get('userPassword')",
          "            })",
          "        }",
          "    };",
          "",
          "    pm.sendRequest(loginRequest, (err, res) => {",
          "        if (err) {",
          "            console.error('Auto-login failed:', err);",
          "            return;",
          "        }",
          "",
          "        const response = res.json();",
          "        if (response.token) {",
          "            // Save token and set expiry to 23 hours from now",
          "            pm.environment.set('accessToken', response.token);",
          "            pm.environment.set('tokenExpiry', new Date().getTime() + (23 * 60 * 60 * 1000));",
          "        }",
          "    });",
          "}"
        ]
      }
    }],
    "variables": [
      {
        "id": "baseUrl",
        "value": "{{baseUrl}}",
        "type": "string"
      },
      {
        "id": "accessToken",
        "value": "",
        "type": "string"
      },
      {
        "id": "tokenExpiry",
        "value": "0",
        "type": "string"
      },
      {
        "id": "userEmail",
        "value": "",
        "type": "string"
      },
      {
        "id": "userPassword",
        "value": "",
        "type": "string"
      }
    ]
  },
  "x-postman-environment-template": {
    "name": "Tecvin Academy API - {{env}}",
    "values": [
      {
        "key": "baseUrl",
        "value": "http://localhost:5000",
        "enabled": true
      },
      {
        "key": "userEmail",
        "value": "your-email@example.com",
        "enabled": true
      },
      {
        "key": "userPassword",
        "value": "your-password",
        "enabled": true
      },
      {
        "key": "accessToken",
        "value": "",
        "enabled": true
      },
      {
        "key": "tokenExpiry",
        "value": "0",
        "enabled": true
      }
    ]
  }
}
